{"ast":null,"code":"var _jsxFileName = \"/media/mamun/Tools/MERN/prime-bd/client/src/pages/admin/Category/Create.js\";\nimport React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport '../../../styles/user/upload-video/style.scss';\nimport Navbar from '../../../components/AdminNavbar/Index';\nimport Loading from '../../../components/Loading/Index';\n\nconst Create = () => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [fileErr, setFileErr] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null); // Image onChange\n\n  const imageChangeHandeller = event => {\n    let file = event.target.files[0];\n\n    if (file) {\n      setSelectedFile(file);\n    }\n  };\n\n  const onSubmit = async data => {\n    try {\n      if (!selectedFile) {\n        return setFileErr(true);\n      }\n\n      let formData = new FormData();\n      formData.append('name', data.name);\n      formData.append('image', selectedFile);\n      console.log(formData); // setLoading(true)\n    } catch (error) {\n      if (error) {\n        console.log(error.response);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"category-create upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    back: true,\n    title: 'Create Category',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), isLoading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 26\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, errors.name && errors.name.message ? /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 37\n    }\n  }, errors.name && errors.name.message) : /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 37\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    className: \"form-control rounded-0 shadow-none\",\n    placeholder: \"Enter name\",\n    ref: register({\n      required: \"Name is required\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, fileErr ? /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 44\n    }\n  }, \"Image is required\") : /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 39\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    onChange: imageChangeHandeller,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"audio\",\n    className: \"inputfile\",\n    accept: \"image/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"audio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 37\n    }\n  }, \"Audio file\"))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    style: styles.btn,\n    className: \"btn btn-block shadow-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, \"Create\"))))));\n};\n\nexport default Create;\nconst styles = {\n  btn: {\n    color: '#fff',\n    fontWeight: 700,\n    fontSize: 16,\n    background: '#F4A261'\n  }\n};","map":{"version":3,"sources":["/media/mamun/Tools/MERN/prime-bd/client/src/pages/admin/Category/Create.js"],"names":["React","useState","useForm","Navbar","Loading","Create","register","handleSubmit","errors","fileErr","setFileErr","isLoading","setLoading","selectedFile","setSelectedFile","imageChangeHandeller","event","file","target","files","onSubmit","data","formData","FormData","append","name","console","log","error","response","message","required","styles","btn","color","fontWeight","fontSize","background"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useForm } from \"react-hook-form\"\nimport '../../../styles/user/upload-video/style.scss'\n\nimport Navbar from '../../../components/AdminNavbar/Index'\nimport Loading from '../../../components/Loading/Index'\n\nconst Create = () => {\n    const { register, handleSubmit, errors } = useForm()\n    const [fileErr, setFileErr] = useState(false)\n    const [isLoading, setLoading] = useState(false)\n    const [selectedFile, setSelectedFile] = useState(null)\n\n    // Image onChange\n    const imageChangeHandeller = event => {\n        let file = event.target.files[0]\n        if (file) {\n            setSelectedFile(file)\n        }\n    }\n\n\n    const onSubmit = async (data) => {\n        try {\n            if (!selectedFile) {\n                return setFileErr(true)\n            }\n\n            let formData = new FormData()\n            formData.append('name', data.name)\n            formData.append('image', selectedFile)\n\n            console.log(formData)\n            // setLoading(true)\n\n        } catch (error) {\n            if (error) {\n                console.log(error.response)\n            }\n        }\n    }\n    return (\n        <div className=\"category-create upload\">\n            <Navbar back={true} title={'Create Category'} />\n            {isLoading ? <Loading /> : null}\n\n            <div className=\"container-fluid py-3\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <form onSubmit={handleSubmit(onSubmit)}>\n                            {/* Name */}\n                            <div className=\"form-group mb-4\">\n                                {errors.name && errors.name.message ? (\n                                    <small className=\"text-danger\">{errors.name && errors.name.message}</small>\n                                ) : <small>Name</small>\n                                }\n                                <input\n                                    type=\"text\"\n                                    name=\"name\"\n                                    className=\"form-control rounded-0 shadow-none\"\n                                    placeholder=\"Enter name\"\n                                    ref={register({\n                                        required: \"Name is required\"\n                                    })}\n                                />\n                            </div>\n\n                            {/* Image */}\n                            <div className=\"form-group mb-4\">\n                                {fileErr ? <small className=\"text-danger\">Image is required</small>\n                                    : <small>Image</small>\n                                }\n                                <br />\n                                <input\n                                    type=\"file\"\n                                    accept=\"image/*\"\n                                    onChange={imageChangeHandeller}\n                                />\n                                <input \n                                type=\"file\"\n                                 id=\"audio\" \n                                 className=\"inputfile\" accept=\"image/*\" />\n                                <label htmlFor=\"audio\">\n                                    <p>Audio file</p>\n                                </label>\n                            </div>\n\n                            <button type=\"submit\" style={styles.btn} className=\"btn btn-block shadow-none\">Create</button>\n\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    );\n};\n\nexport default Create;\n\nconst styles = {\n    btn: {\n        color: '#fff',\n        fontWeight: 700,\n        fontSize: 16,\n        background: '#F4A261'\n    }\n}"]},"metadata":{},"sourceType":"module"}