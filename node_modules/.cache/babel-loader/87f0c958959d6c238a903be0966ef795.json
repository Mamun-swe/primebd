{"ast":null,"code":"var _jsxFileName = \"/media/mamun/Tools/MERN/prime-bd/client/src/pages/admin/Category/Edit.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport url from '../../../utils/url';\nimport '../../../styles/user/upload-video/style.scss';\nimport { useForm } from \"react-hook-form\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Navbar from '../../../components/AdminNavbar/Index';\nimport LoadingComponent from '../../../components/Loading/Index';\n\nconst Edit = () => {\n  const {\n    id\n  } = useParams();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [isLoading, setLoading] = useState(false);\n  const [category, setCategory] = useState();\n  const [fileErr, setFileErr] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  useEffect(() => {\n    fetchCategory();\n  }, [id]); // Fetch Category \n\n  const fetchCategory = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${url}admin/category/${id}`);\n\n      if (response.status === 200) {\n        setLoading(false);\n        setCategory(response.data);\n        console.log(response.data);\n      }\n    } catch (error) {\n      if (error) {\n        console.log(error.response);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    back: true,\n    title: 'Edit Category',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), isLoading ? /*#__PURE__*/React.createElement(LoadingComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 26\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, errors.name && errors.name.message ? /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 37\n    }\n  }, errors.name && errors.name.message) : /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 37\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    className: \"form-control rounded-0 shadow-none\",\n    placeholder: \"Enter name\",\n    defaultValue: category.name,\n    ref: register({\n      required: \"Name is required\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, fileErr ? /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 44\n    }\n  }, \"Banner is required\") : /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 39\n    }\n  }, \"Banner\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"banner\",\n    className: \"inputfile\",\n    accept: \"image/*\",\n    onChange: imageChangeHandeller,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"banner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 37\n    }\n  }, \"Banner Image\"))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-block btn-primary rounded-0 text-white shadow-none\",\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 46\n    }\n  }, \"Creating...\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 73\n    }\n  }, \"Create\")))))));\n};\n\nexport default Edit;","map":{"version":3,"sources":["/media/mamun/Tools/MERN/prime-bd/client/src/pages/admin/Category/Edit.js"],"names":["React","useEffect","useState","useParams","axios","url","useForm","toast","Navbar","LoadingComponent","Edit","id","register","handleSubmit","errors","isLoading","setLoading","category","setCategory","fileErr","setFileErr","selectedFile","setSelectedFile","fetchCategory","response","get","status","data","console","log","error","onSubmit","name","message","required","imageChangeHandeller"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport url from '../../../utils/url';\nimport '../../../styles/user/upload-video/style.scss';\nimport { useForm } from \"react-hook-form\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Navbar from '../../../components/AdminNavbar/Index'\nimport LoadingComponent from '../../../components/Loading/Index'\n\nconst Edit = () => {\n    const { id } = useParams()\n    const { register, handleSubmit, errors } = useForm()\n    const [isLoading, setLoading] = useState(false)\n    const [category, setCategory] = useState()\n    const [fileErr, setFileErr] = useState(false)\n    const [selectedFile, setSelectedFile] = useState(null)\n\n    useEffect(() => {\n        fetchCategory()\n    }, [id])\n\n    // Fetch Category \n    const fetchCategory = async () => {\n        try {\n            setLoading(true)\n            const response = await axios.get(`${url}admin/category/${id}`)\n            if (response.status === 200) {\n                setLoading(false)\n                setCategory(response.data)\n                console.log(response.data)\n            }\n        } catch (error) {\n            if (error) {\n                console.log(error.response)\n            }\n        }\n    }\n\n    \n\n    return (\n        <div>\n            <Navbar back={true} title={'Edit Category'} />\n            {isLoading ? <LoadingComponent /> : null}\n\n            <div className=\"container-fluid py-3\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <form onSubmit={handleSubmit(onSubmit)}>\n                            {/* Name */}\n                            <div className=\"form-group mb-4\">\n                                {errors.name && errors.name.message ? (\n                                    <small className=\"text-danger\">{errors.name && errors.name.message}</small>\n                                ) : <small>Name</small>\n                                }\n                                <input\n                                    type=\"text\"\n                                    name=\"name\"\n                                    className=\"form-control rounded-0 shadow-none\"\n                                    placeholder=\"Enter name\"\n                                    defaultValue={category.name}\n                                    ref={register({\n                                        required: \"Name is required\"\n                                    })}\n                                />\n                            </div>\n\n                            {/* Image */}\n                            <div className=\"form-group mb-4\">\n                                {fileErr ? <small className=\"text-danger\">Banner is required</small>\n                                    : <small>Banner</small>\n                                }\n                                <br />\n                                <input\n                                    type=\"file\"\n                                    id=\"banner\"\n                                    className=\"inputfile\"\n                                    accept=\"image/*\"\n                                    onChange={imageChangeHandeller}\n                                />\n                                <label htmlFor=\"banner\">\n                                    <p>Banner Image</p>\n                                </label>\n                            </div>\n\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-block btn-primary rounded-0 text-white shadow-none\"\n                                disabled={isLoading}\n                            >\n                                {isLoading ? <span>Creating...</span> : <span>Create</span>}\n                            </button>\n\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    );\n};\n\nexport default Edit;"]},"metadata":{},"sourceType":"module"}