{"ast":null,"code":"var _jsxFileName = \"/media/mamun/Tools/MERN/prime-bd/client/src/pages/user/upload/Video.js\";\nimport React, { useState } from 'react';\nimport '../../../styles/user/upload-video/style.scss';\nimport Icon from 'react-icons-kit';\nimport { useForm } from \"react-hook-form\";\nimport { ic_cloud_upload } from 'react-icons-kit/md';\nimport Navbar from '../../../components/UserNavbar/Index';\n\nconst Video = () => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [isLoading, setLoading] = useState(false);\n  const [selectedBanner, setSelectedBanner] = useState(null);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [fileErr, setFileErr] = useState({\n    banner: null,\n    video: null\n  });\n  const [bannerPrev, setBannerPrev] = useState(null);\n  const [videoPrev, setVideoPrev] = useState(null);\n\n  const onSubmit = async data => {\n    try {\n      if (!selectedBanner) {\n        return setFileErr({\n          banner: 'Banner is required'\n        });\n      }\n\n      if (!selectedVideo) {\n        return setFileErr({\n          video: 'Video is required'\n        });\n      }\n\n      setLoading(true);\n      let formData = new FormData();\n      formData.append('user_id', localStorage.getItem('id'));\n      formData.append('title', data.title);\n      formData.append('category_id', data.category);\n      formData.append('banner', selectedBanner);\n      formData.append('video', selectedVideo);\n      const response = await axios.post(`${url}admin/video`, formData);\n\n      if (response.status === 200) {\n        setLoading(false);\n        toast.success(response.data.message);\n      }\n    } catch (error) {\n      if (error) {\n        setLoading(false);\n        console.log(error.response);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    title: 'Upload video',\n    back: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 px-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card border-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header p-3 text-center bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: ic_cloud_upload,\n    size: 40,\n    style: {\n      color: '#F4A261'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 33\n    }\n  }, \"Upload Your Video\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body py-4 px-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 37\n    }\n  }, errors.title && errors.title.message ? /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 45\n    }\n  }, errors.title && errors.title.message) : /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 45\n    }\n  }, \"Video title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    className: \"form-control shadow-none rounded-0\",\n    placeholder: \"Enter video title\",\n    ref: register({\n      required: \"Title is required\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 37\n    }\n  }, errors.category && errors.category.message ? /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 45\n    }\n  }, errors.category && errors.category.message) : /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 45\n    }\n  }, \"Select category\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"category\",\n    className: \"form-control shadow-none rounded-0 pl-2\",\n    ref: register({\n      required: \"Category is required\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 45\n    }\n  }, \"abc\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 45\n    }\n  }, \"abc\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 45\n    }\n  }, \"abc\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"image\",\n    className: \"inputfile\",\n    accept: \"image/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 45\n    }\n  }, \"Banner Image\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"video\",\n    className: \"inputfile\",\n    accept: \"video/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 45\n    }\n  }, \"Video file\"))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary rounded-0 shadow-none text-white btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 37\n    }\n  }, \"Upload\"))))))), isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-center flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, \"Uploading...\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  }, \"Don't leave before complete.\"))) : null);\n};\n\nexport default Video;","map":{"version":3,"sources":["/media/mamun/Tools/MERN/prime-bd/client/src/pages/user/upload/Video.js"],"names":["React","useState","Icon","useForm","ic_cloud_upload","Navbar","Video","register","handleSubmit","errors","isLoading","setLoading","selectedBanner","setSelectedBanner","selectedVideo","setSelectedVideo","categories","setCategories","fileErr","setFileErr","banner","video","bannerPrev","setBannerPrev","videoPrev","setVideoPrev","onSubmit","data","formData","FormData","append","localStorage","getItem","title","category","response","axios","post","url","status","toast","success","message","error","console","log","color","required"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport '../../../styles/user/upload-video/style.scss'\nimport Icon from 'react-icons-kit'\nimport { useForm } from \"react-hook-form\"\nimport { ic_cloud_upload } from 'react-icons-kit/md'\n\nimport Navbar from '../../../components/UserNavbar/Index'\n\nconst Video = () => {\n    const { register, handleSubmit, errors } = useForm()\n    const [isLoading, setLoading] = useState(false)\n    const [selectedBanner, setSelectedBanner] = useState(null)\n    const [selectedVideo, setSelectedVideo] = useState(null)\n    const [categories, setCategories] = useState([])\n    const [fileErr, setFileErr] = useState({ banner: null, video: null })\n    const [bannerPrev, setBannerPrev] = useState(null)\n    const [videoPrev, setVideoPrev] = useState(null)\n\n    const onSubmit = async (data) => {\n        try {\n            if (!selectedBanner) {\n                return setFileErr({ banner: 'Banner is required' })\n            }\n\n            if (!selectedVideo) {\n                return setFileErr({ video: 'Video is required' })\n            }\n\n            setLoading(true)\n            let formData = new FormData()\n            formData.append('user_id', localStorage.getItem('id'))\n            formData.append('title', data.title)\n            formData.append('category_id', data.category)\n            formData.append('banner', selectedBanner)\n            formData.append('video', selectedVideo)\n\n            const response = await axios.post(`${url}admin/video`, formData)\n            if (response.status === 200) {\n                setLoading(false)\n                toast.success(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                setLoading(false)\n                console.log(error.response)\n            }\n        }\n    }\n\n\n    return (\n        <div className=\"upload\">\n            <Navbar\n                title={'Upload video'}\n                back={true}\n            />\n\n            <div className=\"container-fluid py-3\">\n                <div className=\"row\">\n                    <div className=\"col-12 px-5\">\n                        <div className=\"card border-0\">\n                            <div className=\"card-header p-3 text-center bg-white\">\n                                <Icon icon={ic_cloud_upload} size={40} style={{ color: '#F4A261' }} />\n                                <h6 className=\"mb-0\">Upload Your Video</h6>\n                            </div>\n                            <div className=\"card-body py-4 px-0\">\n                                <form onSubmit={handleSubmit(onSubmit)}>\n                                    {/* Title */}\n                                    <div className=\"form-group mb-3\">\n                                        {errors.title && errors.title.message ? (\n                                            <small className=\"text-danger\">{errors.title && errors.title.message}</small>\n                                        ) : <small>Video title</small>\n                                        }\n\n                                        <input\n                                            type=\"text\"\n                                            name=\"title\"\n                                            className=\"form-control shadow-none rounded-0\"\n                                            placeholder=\"Enter video title\"\n                                            ref={register({\n                                                required: \"Title is required\",\n                                            })}\n                                        />\n                                    </div>\n\n                                    {/* Category */}\n                                    <div className=\"form-group mb-3\">\n                                        {errors.category && errors.category.message ? (\n                                            <small className=\"text-danger\">{errors.category && errors.category.message}</small>\n                                        ) : <small>Select category</small>\n                                        }\n\n                                        <select\n                                            name=\"category\"\n                                            className=\"form-control shadow-none rounded-0 pl-2\"\n                                            ref={register({\n                                                required: \"Category is required\",\n                                            })}\n                                        >\n                                            <option>abc</option>\n                                            <option>abc</option>\n                                            <option>abc</option>\n                                        </select>\n                                    </div>\n\n                                    {/* Banner Image */}\n                                    <div className=\"form-group mb-3\">\n                                        <input type=\"file\" id=\"image\" className=\"inputfile\" accept=\"image/*\" />\n                                        <label htmlFor=\"image\">\n                                            <p>Banner Image</p>\n                                        </label>\n                                    </div>\n\n                                    {/* Video */}\n                                    <div className=\"form-group mb-3\">\n                                        <input type=\"file\" id=\"video\" className=\"inputfile\" accept=\"video/*\" />\n                                        <label htmlFor=\"video\">\n                                            <p>Video file</p>\n                                        </label>\n                                    </div>\n\n                                    <button type=\"submit\" className=\"btn btn-primary rounded-0 shadow-none text-white btn-block\">Upload</button>\n\n\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Uploading Progress */}\n            {isLoading ?\n                <div className=\"upload-progress\">\n                    <div className=\"flex-center flex-column\">\n                        <h6>Uploading...</h6>\n                        <p>Don't leave before complete.</p>\n                    </div>\n                </div>\n                : null}\n        </div>\n    );\n};\n\nexport default Video;"]},"metadata":{},"sourceType":"module"}