{"ast":null,"code":"var _jsxFileName = \"/media/mamun/Tools/MERN/prime-bd/client/src/pages/user/upload/Audio.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../../../styles/user/upload-video/style.scss';\nimport Icon from 'react-icons-kit';\nimport { useForm } from \"react-hook-form\";\nimport { ic_cloud_upload } from 'react-icons-kit/md';\nimport axios from 'axios';\nimport url from '../../../utils/url';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { header } from '../../../utils/Header';\nimport Navbar from '../../../components/UserNavbar/Index';\ntoast.configure();\n\nconst Audio = () => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [isLoading, setLoading] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [selectedAudio, setSelectedAudio] = useState(null);\n  const [fileErr, setFileErr] = useState({\n    audio: null\n  });\n  useEffect(() => {\n    // Fetch Categories\n    const fetchCategories = async () => {\n      try {\n        const response = await axios.get(`${url}user/categories`, header);\n        setCategories(response.data);\n        setLoading(false);\n      } catch (error) {\n        if (error) {\n          console.log(error.response);\n          setLoading(false);\n        }\n      }\n    };\n\n    fetchCategories();\n  }, []); // Audio onChange\n\n  const audioChangeHandeller = event => {\n    let file = event.target.files[0];\n\n    if (file && file.size > 7000000) {\n      setSelectedAudio(null);\n      setFileErr({\n        audio: 'Select less than 7 MB file'\n      });\n    } else {\n      setSelectedAudio(file);\n    }\n  };\n\n  const onSubmit = async data => {\n    try {\n      if (!selectedAudio) {\n        return setFileErr({\n          audio: 'Audio is required'\n        });\n      }\n\n      setLoading(true);\n      let formData = new FormData();\n      formData.append('user_id', localStorage.getItem('id'));\n      formData.append('title', data.title);\n      formData.append('category_id', data.category);\n      formData.append('audio', selectedAudio);\n      const response = await axios.post(`${url}user/audio`, formData);\n\n      if (response.status === 200) {\n        setLoading(false);\n        toast.success(response.data.message);\n      }\n    } catch (error) {\n      if (error) {\n        console.log(error.response);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    back: true,\n    title: 'Upload Audio',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 px-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card border-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header p-3 text-center bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: ic_cloud_upload,\n    size: 40,\n    style: {\n      color: '#F4A261'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, \"Upload Audio\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body py-4 px-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 37\n    }\n  }, errors.title && errors.title.message ? /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 45\n    }\n  }, errors.title && errors.title.message) : /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 45\n    }\n  }, \"Audio title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    className: \"form-control shadow-none rounded-0\",\n    placeholder: \"Enter audio title\",\n    ref: register({\n      required: \"Title is required\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 37\n    }\n  }, errors.category && errors.category.message ? /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 45\n    }\n  }, errors.category && errors.category.message) : /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 45\n    }\n  }, \"Select category\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"category\",\n    className: \"form-control shadow-none rounded-0 pl-2\",\n    ref: register({\n      required: \"Category is required\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 41\n    }\n  }, categories && categories.map((category, i) => /*#__PURE__*/React.createElement(\"option\", {\n    value: category.id,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 49\n    }\n  }, category.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 37\n    }\n  }, fileErr && fileErr.audio ? /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 45\n    }\n  }, fileErr.audio) : null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"audio\",\n    className: \"inputfile\",\n    accept: \"audio/*\",\n    onChange: audioChangeHandeller,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"audio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 45\n    }\n  }, \"Audio file\"))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary rounded-0 shadow-none text-white btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 37\n    }\n  }, \"Upload\"))))))), isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-center flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, \"Uploading...\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, \"Don't leave before complete.\"))) : null);\n};\n\nexport default Audio;","map":{"version":3,"sources":["/media/mamun/Tools/MERN/prime-bd/client/src/pages/user/upload/Audio.js"],"names":["React","useEffect","useState","Icon","useForm","ic_cloud_upload","axios","url","toast","header","Navbar","configure","Audio","register","handleSubmit","errors","isLoading","setLoading","categories","setCategories","selectedAudio","setSelectedAudio","fileErr","setFileErr","audio","fetchCategories","response","get","data","error","console","log","audioChangeHandeller","event","file","target","files","size","onSubmit","formData","FormData","append","localStorage","getItem","title","category","post","status","success","message","color","required","map","i","id","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../../../styles/user/upload-video/style.scss'\nimport Icon from 'react-icons-kit'\nimport { useForm } from \"react-hook-form\"\nimport { ic_cloud_upload } from 'react-icons-kit/md'\nimport axios from 'axios'\nimport url from '../../../utils/url'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { header } from '../../../utils/Header'\n\nimport Navbar from '../../../components/UserNavbar/Index'\n\ntoast.configure()\nconst Audio = () => {\n    const { register, handleSubmit, errors } = useForm()\n    const [isLoading, setLoading] = useState(false)\n    const [categories, setCategories] = useState([])\n    const [selectedAudio, setSelectedAudio] = useState(null)\n    const [fileErr, setFileErr] = useState({ audio: null })\n\n    useEffect(() => {\n        // Fetch Categories\n        const fetchCategories = async () => {\n            try {\n                const response = await axios.get(`${url}user/categories`, header)\n                setCategories(response.data)\n                setLoading(false)\n            } catch (error) {\n                if (error) {\n                    console.log(error.response)\n                    setLoading(false)\n                }\n            }\n        }\n\n        fetchCategories()\n    }, [])\n\n    // Audio onChange\n    const audioChangeHandeller = event => {\n        let file = event.target.files[0]\n        if (file && file.size > 7000000) {\n            setSelectedAudio(null)\n            setFileErr({ audio: 'Select less than 7 MB file' })\n        } else {\n            setSelectedAudio(file)\n        }\n    }\n\n    const onSubmit = async (data) => {\n        try {\n            if (!selectedAudio) {\n                return setFileErr({ audio: 'Audio is required' })\n            }\n\n            setLoading(true)\n            let formData = new FormData()\n            formData.append('user_id', localStorage.getItem('id'))\n            formData.append('title', data.title)\n            formData.append('category_id', data.category)\n            formData.append('audio', selectedAudio)\n\n            const response = await axios.post(`${url}user/audio`, formData)\n            if (response.status === 200) {\n                setLoading(false)\n                toast.success(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                console.log(error.response)\n            }\n        }\n    }\n\n    return (\n        <div className=\"upload\">\n            <Navbar back={true} title={'Upload Audio'} />\n            <div className=\"container-fluid py-3\">\n                <div className=\"row\">\n                    <div className=\"col-12 px-5\">\n                        <div className=\"card border-0\">\n                            <div className=\"card-header p-3 text-center bg-white\">\n                                <Icon icon={ic_cloud_upload} size={40} style={{ color: '#F4A261' }} />\n                                <h6 className=\"mb-0\">Upload Audio</h6>\n                            </div>\n                            <div className=\"card-body py-4 px-0\">\n                                <form onSubmit={handleSubmit(onSubmit)}>\n                                    {/* Title */}\n                                    <div className=\"form-group mb-3\">\n                                        {errors.title && errors.title.message ? (\n                                            <small className=\"text-danger\">{errors.title && errors.title.message}</small>\n                                        ) : <small>Audio title</small>\n                                        }\n\n                                        <input\n                                            type=\"text\"\n                                            name=\"title\"\n                                            className=\"form-control shadow-none rounded-0\"\n                                            placeholder=\"Enter audio title\"\n                                            ref={register({\n                                                required: \"Title is required\",\n                                            })}\n                                        />\n                                    </div>\n\n                                    {/* Category */}\n                                    <div className=\"form-group mb-3\">\n                                        {errors.category && errors.category.message ? (\n                                            <small className=\"text-danger\">{errors.category && errors.category.message}</small>\n                                        ) : <small>Select category</small>\n                                        }\n\n                                        <select\n                                            name=\"category\"\n                                            className=\"form-control shadow-none rounded-0 pl-2\"\n                                            ref={register({\n                                                required: \"Category is required\",\n                                            })}\n                                        >\n                                            {categories && categories.map((category, i) =>\n                                                <option value={category.id} key={i}>{category.name}</option>\n                                            )}\n                                        </select>\n                                    </div>\n\n                                    {/* Audio */}\n                                    <div className=\"form-group mb-3\">\n                                        {fileErr && fileErr.audio ? (\n                                            <small className=\"text-danger\">{fileErr.audio}</small>\n                                        ) : null}\n                                        <input\n                                            type=\"file\"\n                                            id=\"audio\"\n                                            className=\"inputfile\"\n                                            accept=\"audio/*\"\n                                            onChange={audioChangeHandeller}\n                                        />\n                                        <label htmlFor=\"audio\">\n                                            <p>Audio file</p>\n                                        </label>\n                                    </div>\n\n                                    <button type=\"submit\" className=\"btn btn-primary rounded-0 shadow-none text-white btn-block\">Upload</button>\n\n\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Uploading Progress */}\n            {isLoading ?\n                <div className=\"upload-progress\">\n                    <div className=\"flex-center flex-column\">\n                        <h6>Uploading...</h6>\n                        <p>Don't leave before complete.</p>\n                    </div>\n                </div>\n                : null}\n        </div>\n    );\n};\n\nexport default Audio;"]},"metadata":{},"sourceType":"module"}