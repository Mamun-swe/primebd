{"ast":null,"code":"var _jsxFileName = \"/media/mamun/Tools/MERN/prime-bd/client/src/pages/admin/Upload/Video.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../../../styles/user/upload-video/style.scss';\nimport Icon from 'react-icons-kit';\nimport { useForm } from \"react-hook-form\";\nimport { ic_cloud_upload } from 'react-icons-kit/md';\nimport axios from 'axios';\nimport url from '../../../utils/url';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { header } from '../../../utils/Header';\nimport Navbar from '../../../components/AdminNavbar/Index';\ntoast.configure();\n\nconst Video = () => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [isLoading, setLoading] = useState(false);\n  const [selectedBanner, setSelectedBanner] = useState(null);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [fileErr, setFileErr] = useState({\n    banner: null,\n    video: null\n  });\n  const [bannerPrev, setBannerPrev] = useState(null);\n  const [videoPrev, setVideoPrev] = useState(null);\n  useEffect(() => {\n    // Fetch Categories\n    const fetchCategories = async () => {\n      try {\n        const response = await axios.get(`${url}admin/category`);\n        setCategories(response.data);\n        setLoading(false);\n      } catch (error) {\n        if (error) {\n          console.log(error.response);\n          setLoading(false);\n        }\n      }\n    };\n\n    fetchCategories();\n  }, []); // Banner onChange\n\n  const bannerChangeHandeller = event => {\n    let file = event.target.files[0];\n\n    if (file) {\n      setBannerPrev(URL.createObjectURL(file));\n      setSelectedBanner(file);\n    }\n  }; // Video onChange\n\n\n  const videoChangeHandeller = event => {\n    let file = event.target.files[0];\n\n    if (file && file.size > 7000000) {\n      setVideoPrev(null);\n      setSelectedVideo(null);\n      setFileErr({\n        video: 'Select less than 7 MB file'\n      });\n    } else {\n      setVideoPrev(URL.createObjectURL(file));\n      setSelectedVideo(file);\n    }\n  };\n\n  const onSubmit = async data => {\n    try {\n      if (!selectedBanner) {\n        return setFileErr({\n          banner: 'Banner is required'\n        });\n      }\n\n      if (!selectedVideo) {\n        return setFileErr({\n          video: 'Video is required'\n        });\n      }\n\n      setLoading(true);\n      let formData = new FormData();\n      formData.append('user_id', localStorage.getItem('id'));\n      formData.append('title', data.title);\n      formData.append('category_id', data.category);\n      formData.append('banner', selectedBanner);\n      formData.append('video', selectedVideo);\n      const response = await axios.post(`${url}admin/video`, formData);\n\n      if (response.status === 200) {\n        setLoading(false);\n        toast.success(response.data.message);\n      }\n    } catch (error) {\n      if (error) {\n        setLoading(false);\n        console.log(error.response);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    back: true,\n    title: 'Upload Video',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 px-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card border-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header p-3 text-center bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: ic_cloud_upload,\n    size: 40,\n    style: {\n      color: '#F4A261'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  }, \"Upload Your Video\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body py-4 px-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 37\n    }\n  }, errors.title && errors.title.message ? /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 45\n    }\n  }, errors.title && errors.title.message) : /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 45\n    }\n  }, \"Video title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    className: \"form-control shadow-none rounded-0\",\n    placeholder: \"Enter video title\",\n    ref: register({\n      required: \"Title is required\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 37\n    }\n  }, errors.category && errors.category.message ? /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 45\n    }\n  }, errors.category && errors.category.message) : /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 45\n    }\n  }, \"Select category\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"category\",\n    className: \"form-control shadow-none rounded-0 pl-2\",\n    ref: register({\n      required: \"Category is required\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 41\n    }\n  }, categories && categories.map((category, i) => /*#__PURE__*/React.createElement(\"option\", {\n    value: category.id,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 49\n    }\n  }, category.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 37\n    }\n  }, fileErr && fileErr.banner ? /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 45\n    }\n  }, fileErr.banner) : null, bannerPrev ? /*#__PURE__*/React.createElement(\"img\", {\n    src: bannerPrev,\n    className: \"img-fluid\",\n    alt: \"...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 55\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"image\",\n    className: \"inputfile\",\n    accept: \"image/*\",\n    onChange: bannerChangeHandeller,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 45\n    }\n  }, \"Banner Image\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 37\n    }\n  }, fileErr && fileErr.video ? /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 45\n    }\n  }, fileErr.video) : null, videoPrev ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"embed-responsive embed-responsive-16by9 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    className: \"embed-responsive-item\",\n    src: videoPrev,\n    allowFullScreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 49\n    }\n  })) : null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"video\",\n    className: \"inputfile\",\n    accept: \"video/*\",\n    onChange: videoChangeHandeller,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 45\n    }\n  }, \"Video file\"))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary rounded-0 shadow-none text-white btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 37\n    }\n  }, \"Upload\"))))))), isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-center flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, \"Uploading...\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 25\n    }\n  }, \"Don't leave before complete.\"))) : null);\n};\n\nexport default Video;","map":{"version":3,"sources":["/media/mamun/Tools/MERN/prime-bd/client/src/pages/admin/Upload/Video.js"],"names":["React","useEffect","useState","Icon","useForm","ic_cloud_upload","axios","url","toast","header","Navbar","configure","Video","register","handleSubmit","errors","isLoading","setLoading","selectedBanner","setSelectedBanner","selectedVideo","setSelectedVideo","categories","setCategories","fileErr","setFileErr","banner","video","bannerPrev","setBannerPrev","videoPrev","setVideoPrev","fetchCategories","response","get","data","error","console","log","bannerChangeHandeller","event","file","target","files","URL","createObjectURL","videoChangeHandeller","size","onSubmit","formData","FormData","append","localStorage","getItem","title","category","post","status","success","message","color","required","map","i","id","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../../../styles/user/upload-video/style.scss'\nimport Icon from 'react-icons-kit'\nimport { useForm } from \"react-hook-form\"\nimport { ic_cloud_upload } from 'react-icons-kit/md'\nimport axios from 'axios'\nimport url from '../../../utils/url'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport {header} from '../../../utils/Header'\n\nimport Navbar from '../../../components/AdminNavbar/Index'\n\ntoast.configure()\nconst Video = () => {\n    const { register, handleSubmit, errors } = useForm()\n    const [isLoading, setLoading] = useState(false)\n    const [selectedBanner, setSelectedBanner] = useState(null)\n    const [selectedVideo, setSelectedVideo] = useState(null)\n    const [categories, setCategories] = useState([])\n    const [fileErr, setFileErr] = useState({ banner: null, video: null })\n    const [bannerPrev, setBannerPrev] = useState(null)\n    const [videoPrev, setVideoPrev] = useState(null)\n\n    useEffect(() => {\n        // Fetch Categories\n        const fetchCategories = async () => {\n            try {\n                const response = await axios.get(`${url}admin/category`)\n                setCategories(response.data)\n                setLoading(false)\n            } catch (error) {\n                if (error) {\n                    console.log(error.response)\n                    setLoading(false)\n                }\n            }\n        }\n\n        fetchCategories()\n    }, [])\n\n    // Banner onChange\n    const bannerChangeHandeller = event => {\n        let file = event.target.files[0]\n        if (file) {\n            setBannerPrev(URL.createObjectURL(file))\n            setSelectedBanner(file)\n        }\n    }\n\n    // Video onChange\n    const videoChangeHandeller = event => {\n        let file = event.target.files[0]\n        if (file && file.size > 7000000) {\n            setVideoPrev(null)\n            setSelectedVideo(null)\n            setFileErr({ video: 'Select less than 7 MB file' })\n        } else {\n            setVideoPrev(URL.createObjectURL(file))\n            setSelectedVideo(file)\n        }\n    }\n\n    const onSubmit = async (data) => {\n        try {\n            if (!selectedBanner) {\n                return setFileErr({ banner: 'Banner is required' })\n            }\n\n            if (!selectedVideo) {\n                return setFileErr({ video: 'Video is required' })\n            }\n\n            setLoading(true)\n            let formData = new FormData()\n            formData.append('user_id', localStorage.getItem('id'))\n            formData.append('title', data.title)\n            formData.append('category_id', data.category)\n            formData.append('banner', selectedBanner)\n            formData.append('video', selectedVideo)\n\n            const response = await axios.post(`${url}admin/video`, formData)\n            if (response.status === 200) {\n                setLoading(false)\n                toast.success(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                setLoading(false)\n                console.log(error.response)\n            }\n        }\n    }\n\n    return (\n        <div className=\"upload\">\n            <Navbar back={true} title={'Upload Video'} />\n            <div className=\"container-fluid py-3\">\n                <div className=\"row\">\n                    <div className=\"col-12 px-5\">\n                        <div className=\"card border-0\">\n                            <div className=\"card-header p-3 text-center bg-white\">\n                                <Icon icon={ic_cloud_upload} size={40} style={{ color: '#F4A261' }} />\n                                <h6 className=\"mb-0\">Upload Your Video</h6>\n                            </div>\n                            <div className=\"card-body py-4 px-0\">\n                                <form onSubmit={handleSubmit(onSubmit)}>\n                                    {/* Title */}\n                                    <div className=\"form-group mb-3\">\n                                        {errors.title && errors.title.message ? (\n                                            <small className=\"text-danger\">{errors.title && errors.title.message}</small>\n                                        ) : <small>Video title</small>\n                                        }\n\n                                        <input\n                                            type=\"text\"\n                                            name=\"title\"\n                                            className=\"form-control shadow-none rounded-0\"\n                                            placeholder=\"Enter video title\"\n                                            ref={register({\n                                                required: \"Title is required\",\n                                            })}\n                                        />\n                                    </div>\n\n                                    {/* Category */}\n                                    <div className=\"form-group mb-3\">\n                                        {errors.category && errors.category.message ? (\n                                            <small className=\"text-danger\">{errors.category && errors.category.message}</small>\n                                        ) : <small>Select category</small>\n                                        }\n\n                                        <select\n                                            name=\"category\"\n                                            className=\"form-control shadow-none rounded-0 pl-2\"\n                                            ref={register({\n                                                required: \"Category is required\",\n                                            })}\n                                        >\n                                            {categories && categories.map((category, i) =>\n                                                <option value={category.id} key={i}>{category.name}</option>\n                                            )}\n                                        </select>\n                                    </div>\n\n                                    {/* Banner Image */}\n                                    <div className=\"form-group mb-3\">\n                                        {fileErr && fileErr.banner ? (\n                                            <small className=\"text-danger\">{fileErr.banner}</small>\n                                        ) : null}\n\n                                        {bannerPrev ? <img src={bannerPrev} className=\"img-fluid\" alt=\"...\" /> : null}\n\n                                        <input\n                                            type=\"file\"\n                                            id=\"image\"\n                                            className=\"inputfile\"\n                                            accept=\"image/*\"\n                                            onChange={bannerChangeHandeller}\n                                        />\n                                        <label htmlFor=\"image\">\n                                            <p>Banner Image</p>\n                                        </label>\n                                    </div>\n\n                                    {/* Video */}\n                                    <div className=\"form-group mb-3\">\n                                        {fileErr && fileErr.video ? (\n                                            <small className=\"text-danger\">{fileErr.video}</small>\n                                        ) : null}\n\n                                        {videoPrev ?\n                                            <div className=\"embed-responsive embed-responsive-16by9 mb-2\">\n                                                <iframe className=\"embed-responsive-item\" src={videoPrev} allowFullScreen></iframe>\n                                            </div>\n                                            : null}\n\n                                        <input\n                                            type=\"file\"\n                                            id=\"video\"\n                                            className=\"inputfile\"\n                                            accept=\"video/*\"\n                                            onChange={videoChangeHandeller}\n                                        />\n                                        <label htmlFor=\"video\">\n                                            <p>Video file</p>\n                                        </label>\n                                    </div>\n\n                                    <button type=\"submit\" className=\"btn btn-primary rounded-0 shadow-none text-white btn-block\">Upload</button>\n\n\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Uploading Progress */}\n            {isLoading ?\n                <div className=\"upload-progress\">\n                    <div className=\"flex-center flex-column\">\n                        <h6>Uploading...</h6>\n                        <p>Don't leave before complete.</p>\n                    </div>\n                </div>\n                : null}\n        </div>\n    );\n};\n\nexport default Video;"]},"metadata":{},"sourceType":"module"}