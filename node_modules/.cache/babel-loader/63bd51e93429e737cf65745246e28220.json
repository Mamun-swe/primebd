{"ast":null,"code":"var _jsxFileName = \"/media/mamun/Tools/MERN/prime-bd/client/src/pages/admin/Category/Create.js\";\nimport React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport '../../../styles/user/upload-video/style.scss';\nimport axios from 'axios';\nimport { url } from '../../../utils/url';\nimport Navbar from '../../../components/AdminNavbar/Index';\nimport Loading from '../../../components/Loading/Index';\n\nconst Create = () => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [fileErr, setFileErr] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null); // Image onChange\n\n  const imageChangeHandeller = event => {\n    let file = event.target.files[0];\n\n    if (file) {\n      setSelectedFile(file);\n    }\n  };\n\n  const onSubmit = async data => {\n    try {\n      if (!selectedFile) {\n        return setFileErr(true);\n      }\n\n      let formData = new FormData();\n      formData.append('name', data.name);\n      formData.append('image', selectedFile);\n      const response = await axios.post(`${api}`);\n      console.log(formData);\n      setLoading(true);\n    } catch (error) {\n      if (error) {\n        console.log(error.response);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"category-create upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    back: true,\n    title: 'Create Category',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), isLoading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 26\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, errors.name && errors.name.message ? /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 37\n    }\n  }, errors.name && errors.name.message) : /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 37\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    className: \"form-control rounded-0 shadow-none\",\n    placeholder: \"Enter name\",\n    ref: register({\n      required: \"Name is required\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, fileErr ? /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 44\n    }\n  }, \"Banner is required\") : /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 39\n    }\n  }, \"Banner\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"banner\",\n    className: \"inputfile\",\n    accept: \"image/*\",\n    onChange: imageChangeHandeller,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"banner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 37\n    }\n  }, \"Banner Image\"))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-block btn-primary rounded-0 text-white shadow-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, \"Create\"))))));\n};\n\nexport default Create;","map":{"version":3,"sources":["/media/mamun/Tools/MERN/prime-bd/client/src/pages/admin/Category/Create.js"],"names":["React","useState","useForm","axios","url","Navbar","Loading","Create","register","handleSubmit","errors","fileErr","setFileErr","isLoading","setLoading","selectedFile","setSelectedFile","imageChangeHandeller","event","file","target","files","onSubmit","data","formData","FormData","append","name","response","post","api","console","log","error","message","required"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useForm } from \"react-hook-form\"\nimport '../../../styles/user/upload-video/style.scss'\nimport axios from 'axios'\nimport { url } from '../../../utils/url'\n\nimport Navbar from '../../../components/AdminNavbar/Index'\nimport Loading from '../../../components/Loading/Index'\n\nconst Create = () => {\n    const { register, handleSubmit, errors } = useForm()\n    const [fileErr, setFileErr] = useState(false)\n    const [isLoading, setLoading] = useState(false)\n    const [selectedFile, setSelectedFile] = useState(null)\n\n    // Image onChange\n    const imageChangeHandeller = event => {\n        let file = event.target.files[0]\n        if (file) {\n            setSelectedFile(file)\n        }\n    }\n\n\n    const onSubmit = async (data) => {\n        try {\n            if (!selectedFile) {\n                return setFileErr(true)\n            }\n\n            let formData = new FormData()\n            formData.append('name', data.name)\n            formData.append('image', selectedFile)\n\n            const response = await axios.post(`${api}`)\n\n            console.log(formData)\n            setLoading(true)\n\n        } catch (error) {\n            if (error) {\n                console.log(error.response)\n            }\n        }\n    }\n    return (\n        <div className=\"category-create upload\">\n            <Navbar back={true} title={'Create Category'} />\n            {isLoading ? <Loading /> : null}\n\n            <div className=\"container-fluid py-3\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <form onSubmit={handleSubmit(onSubmit)}>\n                            {/* Name */}\n                            <div className=\"form-group mb-4\">\n                                {errors.name && errors.name.message ? (\n                                    <small className=\"text-danger\">{errors.name && errors.name.message}</small>\n                                ) : <small>Name</small>\n                                }\n                                <input\n                                    type=\"text\"\n                                    name=\"name\"\n                                    className=\"form-control rounded-0 shadow-none\"\n                                    placeholder=\"Enter name\"\n                                    ref={register({\n                                        required: \"Name is required\"\n                                    })}\n                                />\n                            </div>\n\n                            {/* Image */}\n                            <div className=\"form-group mb-4\">\n                                {fileErr ? <small className=\"text-danger\">Banner is required</small>\n                                    : <small>Banner</small>\n                                }\n                                <br />\n                                <input\n                                    type=\"file\"\n                                    id=\"banner\"\n                                    className=\"inputfile\"\n                                    accept=\"image/*\"\n                                    onChange={imageChangeHandeller}\n                                />\n                                <label htmlFor=\"banner\">\n                                    <p>Banner Image</p>\n                                </label>\n                            </div>\n\n                            <button type=\"submit\" className=\"btn btn-block btn-primary rounded-0 text-white shadow-none\">Create</button>\n\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    );\n};\n\nexport default Create;\n"]},"metadata":{},"sourceType":"module"}