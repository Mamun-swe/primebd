{"ast":null,"code":"var _jsxFileName = \"/media/mamun/Tools/MERN/prime-bd/client/src/pages/user/chat/MessageRoom.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../../../styles/user/chat/style.scss';\nimport { useParams } from 'react-router-dom';\nimport Icon from 'react-icons-kit';\nimport { ic_near_me } from 'react-icons-kit/md';\nimport { useForm } from 'react-hook-form';\nimport io from 'socket.io-client';\nimport Navbar from '../../../components/UserNavbar/Index';\nimport LoadingComponent from '../../../components/Loading/Index';\nimport FourOFourComponent from '../../../components/FourOFour/Index'; // import ScrollToBottom from 'react-scroll-to-bottom'\n\nlet socket;\n\nconst MessageRoom = () => {\n  const {\n    id,\n    name\n  } = useParams();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [isLoading, setLoading] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const myId = localStorage.getItem('id');\n  const ENDPOINT = 'localhost:4000';\n  useEffect(() => {\n    socket = io(ENDPOINT, {\n      transports: ['websocket', 'polling', 'flashsocket']\n    });\n  }, [id, name, myId, ENDPOINT]); // Slice Name\n\n  const sliceName = name => {\n    if (name) return name.slice(0, 1);\n  }; // Get Message\n  // const getMessage = () => {\n  //     const data = {\n  //         senderId: myId,\n  //         reciverId: id\n  //     }\n  //     socket.emit('getmessage', data, (response) => {\n  //         setMessages(response)\n  //         console.log(response);\n  //     })\n  // }\n  // Submit Message\n\n\n  const onSubmit = async data => {\n    const messageData = {\n      senderId: myId,\n      reciverId: id,\n      message: data.message\n    };\n    socket.emit('sendmessage', messageData);\n  };\n\n  useEffect(() => {\n    const data = {\n      senderId: myId,\n      reciverId: id\n    };\n    socket.on('getmessage', data, response => {\n      setMessages([...messages, response]);\n      console.log(response);\n    });\n  }, [messages]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-room\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(LoadingComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 26\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    title: name,\n    back: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, messages && messages.length > 0 ? messages.map((items, i) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message\",\n    key: i,\n    id: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 37\n    }\n  }, items.sender != myId ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"person-name-circle rounded-circle mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-center flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 53\n    }\n  }, items.sender))) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: i == id ? \"recived-message ml-auto text-right\" : \"sender-message text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 45\n    }\n  }, items.message))))) : /*#__PURE__*/React.createElement(FourOFourComponent, {\n    messages: 'No message found.',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-sent-container shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-fill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"message\",\n    className: errors.message ? \"form-control shadow-none error-border\" : \"form-control shadow-none border-0\",\n    placeholder: \"Write message...\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn rounded-circle shadow-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-center flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: ic_near_me,\n    size: 24,\n    style: {\n      color: '#007cfa'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 45\n    }\n  })))))))));\n};\n\nexport default MessageRoom;","map":{"version":3,"sources":["/media/mamun/Tools/MERN/prime-bd/client/src/pages/user/chat/MessageRoom.js"],"names":["React","useEffect","useState","useParams","Icon","ic_near_me","useForm","io","Navbar","LoadingComponent","FourOFourComponent","socket","MessageRoom","id","name","register","handleSubmit","errors","isLoading","setLoading","messages","setMessages","myId","localStorage","getItem","ENDPOINT","transports","sliceName","slice","onSubmit","data","messageData","senderId","reciverId","message","emit","on","response","console","log","length","map","items","i","sender","required","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../../../styles/user/chat/style.scss'\nimport { useParams } from 'react-router-dom'\nimport Icon from 'react-icons-kit'\nimport { ic_near_me } from 'react-icons-kit/md'\nimport { useForm } from 'react-hook-form'\nimport io from 'socket.io-client'\n\nimport Navbar from '../../../components/UserNavbar/Index'\nimport LoadingComponent from '../../../components/Loading/Index'\nimport FourOFourComponent from '../../../components/FourOFour/Index'\n// import ScrollToBottom from 'react-scroll-to-bottom'\n\nlet socket;\n\nconst MessageRoom = () => {\n    const { id, name } = useParams()\n    const { register, handleSubmit, errors } = useForm()\n    const [isLoading, setLoading] = useState(false)\n    const [messages, setMessages] = useState([])\n    const myId = localStorage.getItem('id')\n    const ENDPOINT = 'localhost:4000'\n\n    useEffect(() => {\n        socket = io(ENDPOINT, { transports: ['websocket', 'polling', 'flashsocket'] })\n    }, [id, name, myId, ENDPOINT])\n\n\n    // Slice Name\n    const sliceName = name => {\n        if (name)\n            return name.slice(0, 1)\n    }\n\n    // Get Message\n    // const getMessage = () => {\n    //     const data = {\n    //         senderId: myId,\n    //         reciverId: id\n    //     }\n    //     socket.emit('getmessage', data, (response) => {\n    //         setMessages(response)\n    //         console.log(response);\n    //     })\n    // }\n\n\n\n    // Submit Message\n    const onSubmit = async (data) => {\n        const messageData = {\n            senderId: myId,\n            reciverId: id,\n            message: data.message\n        }\n\n        socket.emit('sendmessage', messageData)\n    }\n\n    useEffect(() => {\n        const data = {\n            senderId: myId,\n            reciverId: id\n        }\n        socket.on('getmessage', data, (response) => {\n            setMessages([...messages, response])\n            console.log(response);\n        })\n    }, [messages])\n\n    return (\n        <div className=\"message-room\">\n            {isLoading ? <LoadingComponent /> :\n                <div>\n                    <Navbar title={name} back={true} />\n\n                    {/* Conversation Container */}\n                    <div className=\"conversation-container\">\n\n                        {messages && messages.length > 0 ?\n                            messages.map((items, i) =>\n\n                                <div className=\"message\" key={i} id=\"message\">\n                                    <div className=\"d-flex\">\n                                        {/* Sender */}\n                                        {items.sender != myId ?\n                                            <div className=\"person-name-circle rounded-circle mr-1\">\n                                                <div className=\"flex-center flex-column\">\n                                                    {/* <h6>{sliceName(items.message)}</h6> */}\n                                                    <h6>{items.sender}</h6>\n                                                </div>\n                                            </div>\n                                            : null}\n\n                                        {/* Conversation */}\n                                        <div className={i == id ? \"recived-message ml-auto text-right\" : \"sender-message text-left\"}>\n                                            <p>{items.message}</p>\n                                        </div>\n\n                                        {/* Reciver */}\n                                        {/* {items.reciver == id ?\n                                            <div className=\"person-name-circle rounded-circle ml-1 bg-primary\">\n                                                <div className=\"flex-center flex-column\">\n                                                    <h6 className=\"text-white\">{sliceName(items.message)}</h6>\n                                                </div>\n                                            </div>\n                                            : null} */}\n                                    </div>\n                                </div>\n\n                            )\n                            : <FourOFourComponent messages={'No message found.'} />}\n\n                    </div>\n\n\n                    {/* Message Sent Container */}\n                    <div className=\"message-sent-container shadow\">\n                        <form onSubmit={handleSubmit(onSubmit)}>\n                            <div className=\"d-flex\">\n                                <div className=\"flex-fill\">\n                                    <input\n                                        type=\"text\"\n                                        name=\"message\"\n                                        className={errors.message ? \"form-control shadow-none error-border\" : \"form-control shadow-none border-0\"}\n                                        placeholder=\"Write message...\"\n                                        ref={register({ required: true })}\n                                    />\n                                </div>\n                                <div className=\"ml-1\">\n                                    <button type=\"submit\" className=\"btn rounded-circle shadow-none\">\n                                        <div className=\"flex-center flex-column\">\n                                            <Icon icon={ic_near_me} size={24} style={{ color: '#007cfa' }} />\n                                        </div>\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default MessageRoom;"]},"metadata":{},"sourceType":"module"}